generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model bagian_gedung {
  id                     Int                      @id(map: "bagian_gedung_pk") @default(autoincrement())
  nama                   String                   @unique(map: "bagian_gedung_unique") @db.VarChar
  created_at             DateTime                 @default(now()) @db.Timestamptz(6)
  updated_at             DateTime                 @default(now()) @db.Timestamptz(6)
  updated_by             String                   @db.VarChar
  bagian_gedung_komponen bagian_gedung_komponen[]
}

model bagian_gedung_detail {
  id                        Int                    @id(map: "bagian_gedung_detail_pk") @default(autoincrement())
  bagian_gedung_komponen_id Int
  nama                      String                 @db.VarChar
  maks_foto                 Int
  created_at                DateTime               @default(now()) @db.Timestamptz(6)
  updated_at                DateTime               @default(now()) @db.Timestamptz(6)
  updated_by                String                 @db.VarChar
  bagian_gedung_komponen    bagian_gedung_komponen @relation(fields: [bagian_gedung_komponen_id], references: [id], onDelete: Cascade, map: "bagian_gedung_detail_bagian_gedung_komponen_fk")
  pemeliharaan_gedung       pemeliharaan_gedung[]

  @@unique([bagian_gedung_komponen_id, nama], map: "bagian_gedung_detail_unique")
}

model bagian_gedung_komponen {
  id                   Int                    @id(map: "bagian_gedung_komponen_pk") @default(autoincrement())
  bagian_gedung_id     Int
  nama                 String                 @db.VarChar
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  updated_at           DateTime               @default(now()) @db.Timestamptz(6)
  updated_by           String                 @db.VarChar
  bagian_gedung_detail bagian_gedung_detail[]
  bagian_gedung        bagian_gedung          @relation(fields: [bagian_gedung_id], references: [id], onDelete: Cascade, map: "bagian_gedung_komponen_bagian_gedung_fk")

  @@unique([bagian_gedung_id, nama], map: "bagian_gedung_komponen_unique")
}

model pemeliharaan_gedung {
  id                      Int                  @id(map: "pemeliharaan_gedung_pk") @default(autoincrement())
  gedung_id               Int
  bagian_gedung_detail_id Int
  kondisi                 kondisi_enum
  catatan                 String?
  image_url               String
  updated_at              DateTime             @default(now()) @db.Timestamptz(6)
  updated_by              String               @db.VarChar
  ruang_id                Int?
  bagian_gedung_detail    bagian_gedung_detail @relation(fields: [bagian_gedung_detail_id], references: [id], onDelete: Cascade, map: "pemeliharaan_gedung_bagian_gedung_detail_fk")
}

enum kondisi_enum {
  BAGUS
  TIDAKBAGUS
}
